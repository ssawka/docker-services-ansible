#SPDX-License-Identifier: MIT-0
---
# tasks file for db

- name: Ensure Output Directory Exists
  become: yes
  ansible.builtin.file:
    path: "{{ db_output_dir }}"
    state: directory
    owner: "{{ db_system_user }}"
    group: "{{ db_system_group }}"
    mode: '2775'
  tags:
    - always

- name: Create DB Password File
  become: yes
  vars:
    db_password_file: "{{ [db_output_dir, 'secrets', 'db_root_password.txt'] | path_join }}"
  block:
    - name: Stat Password File
      ansible.builtin.stat:
        path: "{{ db_password_file }}"
      register: db_password_file_stat
    - name: Create Password File
      block:
        - name: Ensure Password Directory Exists
          ansible.builtin.file:
            path: "{{ db_password_file | ansible.builtin.dirname }}"
            state: directory
            owner: "{{ db_system_user }}"
            group: "{{ db_system_group }}"
            mode: '0775'
        - name: Create Password File
          ansible.builtin.copy:
            dest: "{{ db_password_file }}"
            content: >-
              {{  lookup('ansible.builtin.password', '/dev/null', 
                  chars=["ascii_letters", "digits"], length=15) }}
            owner: "{{ db_system_user }}"
            group: "{{ db_system_group }}"
            mode: '0440'
      when: not db_password_file_stat.stat.exists
    - name: Update Secrets Value
      vars:
        relpath: "{{ db_password_file | ansible.builtin.relpath(db_output_dir) }}"
        update:
          secrets: "{{ db.secrets | combine({'db_root_password': relpath}) }}"
      ansible.builtin.set_fact:
        db: "{{ db | combine(update) }}"
  tags:
    - always

- name: Generate Files
  become: yes
  vars:
    environment_vars: "{{ db.environment_vars | combine(db_environment_vars) }}"
    local_volumes: "{{ db.local_volumes | combine(db_local_volumes) }}"
    shared_volumes: "{{ db.shared_volumes | combine(db_shared_volumes) }}"
    secrets: "{{ db.secrets | combine(db_secrets) }}"
  ansible.builtin.template:
    src: templates/docker-compose.yml.j2
    dest: "{{ [db_output_dir, 'docker-compose.yml'] | path_join }}"
    force: yes
    owner: "{{ db_system_user }}"
    group: "{{ db_system_group }}"
    mode: '0664'
  tags:
    - always

- name: Update docker_files Role
  block:
    - name: Update docker_files.includes
      vars:
        db_relative_dir: "{{ db_output_dir | ansible.builtin.relpath(docker_files_output_dir) }}"
        db_compose_file: "{{ [db_relative_dir, 'docker-compose.yml'] | path_join }}"
        update:
          includes: "{{ docker_files.includes + [db_compose_file] }}"
      ansible.builtin.set_fact:
        docker_files: "{{ docker_files | combine(update) }}"
      when: db_compose_file not in docker_files.includes
    - name: Update docker_files.shared_volumes
      vars:
        update: 
          shared_volumes: "{{ docker_files.shared_volumes | combine(db.shared_volumes) }}"
      ansible.builtin.set_fact:
        docker_files: "{{ docker_files | combine(update) }}"
  tags:
    - always
